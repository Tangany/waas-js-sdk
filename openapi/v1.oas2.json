{
  "swagger": "2.0",
  "info": {
    "title": "Wallet as a Service",
    "version": "1.2",
    "description": "Check out our [Postman](https://www.getpostman.com/) collection to get started with our API in minutes\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/06367bf9a2664edcebf4)\n\n**Changelog**\n* Added support for standard Ethereum ERC20 methods `POST /eth/erc20/{token}/{wallet}/approve` and `POST /eth/erc20/{token}/{wallet}/transfer-from`\n* Added support for extended Ethereum ERC20 methods `POST /eth/erc20/{token}/{wallet}/mint` and `POST /eth/erc20/{token}/{wallet}/burn`\n* Added support for Bitcoin:\n* * Employing SegWit addresses for lowest fees\n* * Sending to multiple addresses in a single transaction\n* * Fee estimation\n* * Settings for transaction speed and confidence\n* Made the HTTP header `tangany-ethereum-network` optional by using the default value `mainnet`\n",
    "termsOfService": "",
    "contact": {
      "name": "Tangany GmbH",
      "url": "https://tangany.com/contact/",
      "email": "support@tangany.com"
    }
  },
  "host": "api.tangany.com",
  "paths": {
    "/wallet": {
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successful wallet list query",
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Wallet",
                    "description": "A wallet account that represents a single blockchain account.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "title": "Wallet name",
                        "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                        "minLength": 1,
                        "maxLength": 127,
                        "pattern": "^[0-9a-zA-Z-]{1,127}$"
                      },
                      "version": {
                        "type": "string",
                        "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
                        "minLength": 32,
                        "maxLength": 32,
                        "pattern": "^(latest|[0-9a-z]{32})$"
                      },
                      "created": {
                        "type": "string",
                        "description": "Creation time in UTC",
                        "format": "date-time"
                      },
                      "updated": {
                        "type": "string",
                        "description": "Last updated time in UTC",
                        "format": "date-time"
                      },
                      "security": {
                        "type": "string",
                        "enum": [
                          "software",
                          "hsm"
                        ],
                        "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
                        "example": "hsm"
                      }
                    },
                    "required": [
                      "wallet",
                      "version",
                      "created",
                      "updated",
                      "security"
                    ]
                  }
                },
                "skiptoken": {
                  "type": "string",
                  "title": "Skiptoken",
                  "description": "Paging parameter returned by the endpoint to query the next batch of results when used as a query parameter in the call",
                  "pattern": "[a-zA-Z0-9]+"
                }
              },
              "required": [
                "list"
              ]
            },
            "examples": {
              "application/json": {
                "list": [
                  {
                    "wallet": "dummy-wallet-d429af11af0d3f9acba61e7ef1f92aa1e2306502",
                    "version": "latest",
                    "created": "2019-03-26T13:08:51Z",
                    "updated": "2019-03-26T13:08:51Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-d95a9966f6666fd1437980506643fce1a59cfec9",
                    "version": "latest",
                    "created": "2019-03-22T21:04:03Z",
                    "updated": "2019-03-22T21:04:03Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-e4bddb240c27ab88f8eabe9d46872f29fc7b985e",
                    "version": "latest",
                    "created": "2019-03-22T21:04:53Z",
                    "updated": "2019-03-22T21:04:53Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-e89eee7ddf6554e21e3f3251a5d719dd1a644f1a",
                    "version": "latest",
                    "created": "2019-03-26T14:11:33Z",
                    "updated": "2019-03-26T14:11:33Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-eb73740a53230464c28c6158e82bf159a3bb24ae",
                    "version": "latest",
                    "created": "2019-03-22T23:50:47Z",
                    "updated": "2019-03-22T23:50:47Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-f8a6f2b4eb4e839340112050eab8c2a511e15ab4",
                    "version": "latest",
                    "created": "2019-03-22T21:03:13Z",
                    "updated": "2019-03-22T21:03:13Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-fafefe3fde3d5cc5a5a36eb0ed88320b6c357bfc",
                    "version": "latest",
                    "created": "2019-03-22T16:11:30Z",
                    "updated": "2019-03-22T16:11:30Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy-wallet-ff5a65dd43306b8e181292cf2baed429cb76342f",
                    "version": "latest",
                    "created": "2019-03-22T21:04:29Z",
                    "updated": "2019-03-22T21:04:29Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001116",
                    "version": "latest",
                    "created": "2019-03-25T19:11:57Z",
                    "updated": "2019-03-25T19:11:57Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001147",
                    "version": "latest",
                    "created": "2019-03-25T19:11:43Z",
                    "updated": "2019-03-25T19:11:43Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001195",
                    "version": "latest",
                    "created": "2019-03-25T19:11:39Z",
                    "updated": "2019-03-25T19:11:39Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001213",
                    "version": "latest",
                    "created": "2019-03-25T19:11:30Z",
                    "updated": "2019-03-25T19:11:30Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001243",
                    "version": "latest",
                    "created": "2019-03-25T19:11:45Z",
                    "updated": "2019-03-25T19:11:45Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001352",
                    "version": "latest",
                    "created": "2019-03-25T19:11:59Z",
                    "updated": "2019-03-25T19:11:59Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy0115",
                    "version": "latest",
                    "created": "2019-03-25T19:11:54Z",
                    "updated": "2019-03-25T19:11:54Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy011583",
                    "version": "latest",
                    "created": "2019-03-25T19:11:49Z",
                    "updated": "2019-03-25T19:11:49Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy001671",
                    "version": "latest",
                    "created": "2019-03-25T19:12:02Z",
                    "updated": "2019-03-25T19:12:02Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy101699",
                    "version": "latest",
                    "created": "2019-03-25T19:11:51Z",
                    "updated": "2019-03-25T19:11:51Z",
                    "security": "software"
                  },
                  {
                    "wallet": "dummy00198",
                    "version": "latest",
                    "created": "2019-03-25T19:11:41Z",
                    "updated": "2019-03-25T19:11:41Z",
                    "security": "software"
                  },
                  {
                    "wallet": "e136ab43b3d241a8612dd8dbfcfdc354971487b0",
                    "version": "latest",
                    "created": "2019-03-20T20:14:25Z",
                    "updated": "2019-03-20T20:14:25Z",
                    "security": "software"
                  },
                  {
                    "wallet": "e139ccc8b23a6c5581954a7bbecb3b0e188fcb41",
                    "version": "latest",
                    "created": "2019-03-22T23:53:36Z",
                    "updated": "2019-03-22T23:53:36Z",
                    "security": "software"
                  },
                  {
                    "wallet": "e17e3098f68079ab4557faa601aa17513fdf0b98",
                    "version": "latest",
                    "created": "2019-03-21T07:23:40Z",
                    "updated": "2019-03-21T07:23:40Z",
                    "security": "software"
                  },
                  {
                    "wallet": "e2e47f79a2dd9547196cfa9e478128b854aa5d2d",
                    "version": "latest",
                    "created": "2019-03-21T07:41:31Z",
                    "updated": "2019-03-21T07:41:31Z",
                    "security": "software"
                  }
                ],
                "skiptoken": "eyJOZXh0TaFya2VyIjoiMiExMTIhTURbd01EUXdJV3RsZVM5Rk5UQkVSVVp10XkxRlJFSXdMVFEyUVVFdE9USkRPQzB5Tm12tJM1JqazJRa1Uzt1RZaeR1EQXdNREk0SVRrNU9Ua3RmNcv2FTXpGVU1qTTZOVGs2TlRrdU9UazVPVGs1T1ZvaCIsIlRhcmdldExvY2F0aW9uIj01wfQ"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          }
        },
        "summary": "List all wallets",
        "security": [
          {
            "subscription": []
          },
          {
            "secret": []
          },
          {
            "client": []
          }
        ],
        "operationId": "list-wallets",
        "description": "Lists all wallets for current clientId.",
        "tags": [
          "wallet"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "Server response for a successfuly created or recreated wallet",
            "schema": {
              "type": "object",
              "title": "Wallet",
              "description": "A wallet account that represents a single blockchain account.",
              "properties": {
                "wallet": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
                  "minLength": 32,
                  "maxLength": 32,
                  "pattern": "^(latest|[0-9a-z]{32})$"
                },
                "created": {
                  "type": "string",
                  "description": "Creation time in UTC",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "Last updated time in UTC",
                  "format": "date-time"
                },
                "security": {
                  "type": "string",
                  "enum": [
                    "software",
                    "hsm"
                  ],
                  "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
                  "example": "hsm"
                }
              },
              "required": [
                "wallet",
                "version",
                "created",
                "updated",
                "security"
              ]
            },
            "examples": {
              "application/json": {
                "wallet": "ae5de2d7-6314-463e-a470-0a47812fcbec",
                "version": "e48c26c458c64c669cca3f6e46142698",
                "created": "2019-03-12T11:25:32Z",
                "updated": "2019-03-12T11:25:32Z",
                "security": "hsm"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for a non-existent wallet",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "Server response for trying to create a new wallet for a exisiting wallet name. Use `PUT` operation to overwrite an existing wallet.",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          }
        },
        "summary": "Create new wallet ",
        "operationId": "create-wallet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wallet": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "useHsm": {
                  "type": "boolean",
                  "title": "HSM usage",
                  "description": "Enhance wallet security via Hardware Secure Module usage for cryptographic operations. Only supported by certain subscritions.",
                  "example": true
                }
              },
              "required": [
                "wallet"
              ]
            },
            "x-examples": {
              "application/json": {
                "wallet": "u1938484",
                "useHsm": true
              }
            }
          }
        ],
        "description": "Creates a new wallet",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "tags": [
          "wallet"
        ]
      },
      "parameters": [
        {
          "name": "skiptoken",
          "in": "query",
          "type": "string",
          "pattern": "[a-zA-Z0-9]+",
          "description": "Query the next page of the results batch"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/wallet/{wallet}": {
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successful Ethereum wallet query",
            "schema": {
              "type": "object",
              "title": "Ethereum Wallet",
              "properties": {
                "balance": {
                  "type": "string",
                  "title": "Ethereum wallet balance",
                  "description": "Amount of ether that a wallet address holds. Examples: `2.3411` `0.0001803`",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$"
                },
                "address": {
                  "type": "string",
                  "title": "Ethereum address",
                  "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
                  "minLength": 42,
                  "maxLength": 42,
                  "pattern": "^0x[a-f0-9]{40}$"
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "ETHER"
                  ],
                  "pattern": "ETHER",
                  "description": "Blockchain currency - Ether for Ethereum based blockchains",
                  "example": "ETHER"
                }
              },
              "required": [
                "balance",
                "address",
                "currency"
              ]
            },
            "examples": {
              "application/json": {
                "balance": "3.4361104",
                "currency": "ETHER",
                "address": "0x21877824166e5886129313738289ae19c6bea240"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Get wallet balance",
        "operationId": "get-eth-balance",
        "description": "Returns wallet metrics for the Ethereum blockchain like ether balance and the address",
        "parameters": [],
        "security": [
          {
            "subscription": []
          },
          {
            "secret": []
          },
          {
            "client": []
          }
        ],
        "tags": [
          "ethereum"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/wallet/{wallet}/send": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Ethereum transaction hash",
                  "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^0x[a-z0-9]{64}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "403": {
            "description": "Server response for a call that is not supported by the current subscription",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "operationId": "make-eth-transaction",
        "description": "Send ether to an Ethereum address from given wallet. The Ethereum transaction fee is calculated in real time and added to the expense automatically in accordance with the current `tangany-ethereum-tx-speed` setting",
        "summary": "Make wallet transaction",
        "security": [
          {
            "subscription": []
          },
          {
            "secret": []
          },
          {
            "client": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "title": "Ethereum address",
                  "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
                  "minLength": 42,
                  "maxLength": 42,
                  "pattern": "^0x[a-f0-9]{40}$"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of ether to send",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$",
                  "example": "1.043987"
                }
              },
              "required": [
                "to",
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "to": "0xde0a21566919d193e6a28a9ac8534144cb697eee",
                "amount": "1.00001200000000345"
              }
            }
          }
        ],
        "tags": [
          "ethereum"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/transaction/{hash}": {
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successful Ethereum transaction status query",
            "schema": {
              "type": "object",
              "properties": {
                "isError": {
                  "type": "boolean",
                  "description": "`true` when Ethereum declines to mine the transaction. This can happen when the transaction is fueled with insufficient amount of gas or some other error occurs during contract execution. `false` means the transaction executed successfully",
                  "example": false
                },
                "blockNr": {
                  "title": "Ethereum block",
                  "description": "Block number for a given Ethereum transaction. Equals null when the given transaction hash was not yet included in any block to be mined by the Ethereum Virtual Machine. Examples: `7238290`",
                  "type": [
                    "number",
                    "null"
                  ],
                  "example": 45093
                }
              },
              "required": [
                "isError",
                "blockNr"
              ]
            },
            "examples": {
              "application/json": {
                "isError": false,
                "blockNr": 7238290
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "403": {
            "description": "Server response for a call that is not supported by the current subscription",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Get transaction status",
        "operationId": "get-eth-tx-status",
        "description": "Returns the mining status for a Ethereum transaction",
        "security": [
          {
            "subscription": []
          },
          {
            "secret": []
          },
          {
            "client": []
          }
        ],
        "tags": [
          "ethereum"
        ]
      },
      "parameters": [
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "hash",
          "in": "path",
          "type": "string",
          "description": "Ethereum transaction hash path parameter. Examples: `0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c`",
          "required": true,
          "maxLength": 64,
          "minLength": 64,
          "pattern": "^[a-z0-9]{64}$"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/erc20/{token}/{wallet}/send": {
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Ehereum ERC20 token contract address path parameter. Examples: `0xb5a5f22694352c15b00323844ad545abb2b11028`",
          "maxLength": 42,
          "minLength": 42,
          "pattern": "^0x[a-f0-9]{40}$"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ],
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Ethereum transaction hash",
                  "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^0x[a-z0-9]{64}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "403": {
            "description": "Server response for a call that is not supported by the current subscription",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Make ERC20 token transaction",
        "operationId": "make-eth-erc20-transaction",
        "description": "Send ERC20 tokens from given wallet to an Ethereum address. The Ethereum transaction fee is calculated in real time and added to the expense automatically in accordance with the current `tangany-ethereum-tx-speed` setting",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "required": [
                "to",
                "amount"
              ],
              "properties": {
                "to": {
                  "type": "string",
                  "title": "Ethereum address",
                  "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
                  "minLength": 42,
                  "maxLength": 42,
                  "pattern": "^0x[a-f0-9]{40}$"
                },
                "amount": {
                  "type": "string",
                  "description": "ERC20 token amount to transfer. Must not fall below the token's decimals specification (e.g. \"1e-18\" is the minimum amount for a 18 decimals token)",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "to": "0xa2a079232ef7140e2b4700973c49f297a50b2ecd",
                "amount": "13.752658230123016985"
              }
            }
          }
        ],
        "tags": [
          "ethereum-erc20"
        ]
      }
    },
    "/eth/erc20/{token}/{wallet}": {
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Ehereum ERC20 token contract address path parameter. Examples: `0xb5a5f22694352c15b00323844ad545abb2b11028`",
          "maxLength": 42,
          "minLength": 42,
          "pattern": "^0x[a-f0-9]{40}$"
        },
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successful ERC20 token query",
            "schema": {
              "type": "object",
              "title": "Ethereum Erc20 token balance",
              "properties": {
                "balance": {
                  "type": "string",
                  "title": "Ethereum ERC20 token balance",
                  "description": "ERC20 token amount to transfer. Must not fall below the token's decimals specification Examples: `1200`, `1e-18` (min. possible amount for a 18 decimals token)",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$"
                },
                "currency": {
                  "type": "string",
                  "description": "ERC20 token symbol",
                  "example": "CAT"
                }
              },
              "required": [
                "balance",
                "currency"
              ]
            },
            "examples": {
              "application/json": {
                "balance": "14235.76",
                "currency": "CAT"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "403": {
            "description": "Server response for a call that is not supported by the current subscription",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "description": "Retrieves the ERC20 token balance for given wallet",
        "operationId": "get-eth-erc20-balance",
        "summary": "Get ERC20 token balance",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "tags": [
          "ethereum-erc20"
        ]
      }
    },
    "/subscription": {
      "parameters": []
    },
    "/wallet/{wallet}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Server response for a successful soft-deletion request for a wallet",
            "schema": {
              "type": "object",
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "scheduledPurgeDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Soft deleted wallets are purged by the system after a 90 days retention period. After that a recovery of the deleted key is impossible."
                }
              },
              "required": [
                "recoveryId",
                "scheduledPurgeDate"
              ]
            },
            "examples": {
              "application/json": {
                "recoveryId": "ae5de2d7-6314-463e-a470-0a47812fcbec",
                "scheduledPurgeDate": "2019-03-12T11:25:32Z"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Delete existing wallet",
        "operationId": "delete-wallet",
        "description": "Soft-deletes a wallet thus disabling \"writing\" operations to the blockchain due to the inavailability of cryptographic keys for the deleted wallet. Wallet recovery endpoints are not yet implemented to the API. [Contact the support](https://tangany.freshdesk.com/support/home) to recover soft-deleted wallets during the retention period",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "tags": [
          "wallet"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Server response for a successfuly created or recreated wallet",
            "schema": {
              "type": "object",
              "title": "Wallet",
              "description": "A wallet account that represents a single blockchain account.",
              "properties": {
                "wallet": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
                  "minLength": 32,
                  "maxLength": 32,
                  "pattern": "^(latest|[0-9a-z]{32})$"
                },
                "created": {
                  "type": "string",
                  "description": "Creation time in UTC",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "Last updated time in UTC",
                  "format": "date-time"
                },
                "security": {
                  "type": "string",
                  "enum": [
                    "software",
                    "hsm"
                  ],
                  "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
                  "example": "hsm"
                }
              },
              "required": [
                "wallet",
                "version",
                "created",
                "updated",
                "security"
              ]
            },
            "examples": {
              "application/json": {
                "wallet": "ae5de2d7-6314-463e-a470-0a47812fcbec",
                "version": "e48c26c458c64c669cca3f6e46142698",
                "created": "2019-03-12T11:25:32Z",
                "updated": "2019-03-12T11:25:32Z",
                "security": "hsm"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "403": {
            "description": "Server response for trying to replace the wallet with a different security setting. The security setting cannot be changed in this operation",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Replace existing wallet",
        "description": "Creates a new version of an existing wallet and regenerates the cryptographic keys and thus disables \"writing\" operations of the previous wallet version to the blockchain",
        "operationId": "reset-wallet",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "tags": [
          "wallet"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "useHsm": {
                  "type": "boolean",
                  "title": "HSM usage",
                  "description": "Enhance wallet security via Hardware Secure Module usage for cryptographic operations. Only supported by certain subscritions.",
                  "example": true
                }
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successfuly created or recreated wallet",
            "schema": {
              "type": "object",
              "title": "Wallet",
              "description": "A wallet account that represents a single blockchain account.",
              "properties": {
                "wallet": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
                  "minLength": 32,
                  "maxLength": 32,
                  "pattern": "^(latest|[0-9a-z]{32})$"
                },
                "created": {
                  "type": "string",
                  "description": "Creation time in UTC",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "Last updated time in UTC",
                  "format": "date-time"
                },
                "security": {
                  "type": "string",
                  "enum": [
                    "software",
                    "hsm"
                  ],
                  "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
                  "example": "hsm"
                }
              },
              "required": [
                "wallet",
                "version",
                "created",
                "updated",
                "security"
              ]
            },
            "examples": {
              "application/json": {
                "wallet": "ae5de2d7-6314-463e-a470-0a47812fcbec",
                "version": "e48c26c458c64c669cca3f6e46142698",
                "created": "2019-03-12T11:25:32Z",
                "updated": "2019-03-12T11:25:32Z",
                "security": "hsm"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Get wallet",
        "description": "Returns information for given wallet name",
        "operationId": "get-wallet",
        "tags": [
          "wallet"
        ],
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ]
      }
    },
    "/btc/wallet/{wallet}": {
      "get": {
        "responses": {
          "200": {
            "description": "Server response for a successful Bitcoin wallet query",
            "schema": {
              "type": "object",
              "required": [
                "currency",
                "balance",
                "address"
              ],
              "properties": {
                "currency": {
                  "type": "string",
                  "enum": [
                    "BITCOIN"
                  ],
                  "description": "Blockchain currency - Bitcoin",
                  "example": "BITCOIN"
                },
                "balance": {
                  "type": "string",
                  "title": "Bitcoin wallet balance",
                  "description": "Amount of btc the wallet holds. Examples: `1.0417`",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$"
                },
                "address": {
                  "type": "string",
                  "title": "Bitcoin address",
                  "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                  "minLength": 26,
                  "maxLength": 35,
                  "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "currency": "BITCOIN",
                "balance": "1.25634",
                "address": "bc1qhxkx7t7wr78mvw55hcc5fnaa2xztwjg7a9aqjz"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Get wallet balance",
        "tags": [
          "bitcoin"
        ],
        "description": "Returns relevant wallet metrics for the Bitcoin blockchain (E.g. BTC balance, Bitcoin address). WaaS Bitcoin wallets use native SegWit addresses (e.g. *bc1qqpjecr2zuvjgupsdufzgk3r7lxhp5nwm8sxvyf*) for sending and receiving BTC. The current wallt balance is based on the Bitcoin mining status of the individual transactional \"coins\" and might differ based on the current `tangany-bitcoin-tx-confirmations`setting",
        "operationId": "get-btc-balance",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-bitcoin-network",
          "in": "header",
          "type": "string",
          "enum": [
            "bitcoin",
            "testnet"
          ],
          "description": "(Optional header) Defines the bitcoin network operate in. Supported networks: `bitcoin`, `testnet`.",
          "default": "bitcoin"
        },
        {
          "name": "tangany-bitcoin-tx-confirmations",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the minimum amount of block confirmations required for Bitcoin balance outputs (\"utxo\", \"coins\") to be included in the total wallet balance calculation. The exclusion of unconfirmed outputs prevents the \nposthumous invalidation of own wallet transaction by the parent utxo sending party\n\nThe levels correspond with following target block confirmations amount:\n\nenum|confirmations\n--|--\nnone|0\ndefault|1\nsecure|6",
          "default": "default",
          "enum": [
            "none",
            "default",
            "secure"
          ]
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/btc/wallet/{wallet}/send": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Bitcoin transaction that was queued to be mined by the Bitcoin network. Call `/btc/transaction/{hash}` to retrieve the status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Bitcoin transaction hash",
                  "description": "Hexadecimal hash that represents a bitcoin transaction",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^[a-fA-F0-9]{64}$",
                  "example": "f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Make wallet transaction",
        "tags": [
          "bitcoin"
        ],
        "description": "Send BTC to one or multiple addresses. Uses a safe default value for confirmations amount to prevent spending unconfirmed transaction outputs. The Bitcoin transaction fee is calculated in real time and added to the expense automatically in accordance with the current `tangany-bitcoin-tx-speed` setting. Call [`POST /btc/wallet/{wallet}/estimate-fee`](https://tangany.docs.stoplight.io/api/bitcoin/estimate-btc-transaction) to get a fee estimation for a transaction",
        "operationId": "make-btc-transaction",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Bitcoin transaction recipient",
                    "properties": {
                      "to": {
                        "type": "string",
                        "title": "Bitcoin address",
                        "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                        "minLength": 26,
                        "maxLength": 35,
                        "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount to send in Bitcoin",
                        "pattern": "^\\d*\\.?\\d*$"
                      }
                    },
                    "required": [
                      "to",
                      "amount"
                    ],
                    "description": "Single Bitcoin transaction recipient"
                  }
                },
                {
                  "type": "object",
                  "title": "Bitcoin transaction recipient",
                  "properties": {
                    "to": {
                      "type": "string",
                      "title": "Bitcoin address",
                      "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                      "minLength": 26,
                      "maxLength": 35,
                      "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount to send in Bitcoin",
                      "pattern": "^\\d*\\.?\\d*$"
                    }
                  },
                  "required": [
                    "to",
                    "amount"
                  ],
                  "description": "Single Bitcoin transaction recipient"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "list": [
                  {
                    "to": "bc1qhxkx7t7wr78mvw55hcc5fnaa2xztwjg7a9aqjz",
                    "amount": "0.32"
                  },
                  {
                    "to": "15Ku9gbZVdYG7YiFXVhuY5XouguEjHzhsp",
                    "amount": "0.021452"
                  }
                ]
              },
              "new": ""
            }
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-bitcoin-network",
          "in": "header",
          "type": "string",
          "enum": [
            "bitcoin",
            "testnet"
          ],
          "description": "(Optional header) Defines the bitcoin network operate in. Supported networks: `bitcoin`, `testnet`.",
          "default": "bitcoin"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        },
        {
          "name": " tangany-bitcoin-tx-speed",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the target amount of block confirmations for the transaction to be included to the Bitcoin network. Faster inclusion requires a higher transaction fee. The fee is calculated in real time based on the network state and can be limited by the `header-bitcoin-max-fee-rate` option. The effective transaction delay can be calculated by multiplying the target confirmation blocks with the Bitcoin block time of 10 minutes (e.g. `slow` yields an block inclusion time of approx. 4h)\nDefaults to `default` when omitted from the call.\n\nThe speed levels correspond with following block times:\nSPEED|target block confirmations\n--|--\nslow|24\ndefault|6\nfast|2",
          "default": "default",
          "enum": [
            "slow",
            "default",
            "fast"
          ]
        },
        {
          "name": "tangany-bitcoin-max-fee-rate",
          "in": "header",
          "type": "string",
          "default": "500",
          "description": "(Optional header) Defines the maximum allowed fee rate (satoshi per byte) for a Bitcoin transaction. Prevents from speding absurdly high transaction fees during block fee peaks",
          "pattern": "\\d+"
        },
        {
          "name": "tangany-bitcoin-tx-confirmations",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the minimum amount of block confirmations required for Bitcoin balance outputs (\"utxo\", \"coins\") to be included in the total wallet balance calculation. The exclusion of unconfirmed outputs prevents the \nposthumous invalidation of own wallet transaction by the parent utxo sending party\n\nThe levels correspond with following target block confirmations amount:\n\nenum|confirmations\n--|--\nnone|0\ndefault|1\nsecure|6",
          "default": "default",
          "enum": [
            "none",
            "default",
            "secure"
          ]
        }
      ]
    },
    "/btc/transaction/{hash}": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the transaction status for a bitcoin transaction",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status of the bitcoin transaction",
                  "enum": [
                    "pending",
                    "confirmed",
                    "error"
                  ],
                  "example": "pending"
                },
                "confirmations": {
                  "type": "number",
                  "description": "Amount of confirmations blocks that were mined on top of the block the transaction was included to",
                  "example": 2
                }
              },
              "required": [
                "status",
                "confirmations"
              ]
            },
            "examples": {
              "application/json": {
                "status": "pending",
                "confirmations": 2
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Get transaction status",
        "tags": [
          "bitcoin"
        ],
        "description": "Returns the transaction status for a bitcoin transaction. The confirmation of a transaction corelates with the selected `header-bitcoin-tx-confirmations` header value.",
        "operationId": "get-btc-tx-status",
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ]
      },
      "parameters": [
        {
          "name": "hash",
          "in": "path",
          "type": "string",
          "description": "Bitcoin transaction hash. Example `f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887`",
          "maxLength": 64,
          "minLength": 64,
          "pattern": "^[a-f0-9]{64}$",
          "required": true
        },
        {
          "name": "tangany-bitcoin-network",
          "in": "header",
          "type": "string",
          "enum": [
            "bitcoin",
            "testnet"
          ],
          "description": "(Optional header) Defines the bitcoin network operate in. Supported networks: `bitcoin`, `testnet`.",
          "default": "bitcoin"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        },
        {
          "name": "tangany-bitcoin-tx-confirmations",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the minimum amount of block confirmations required for Bitcoin balance outputs (\"utxo\", \"coins\") to be included in the total wallet balance calculation. The exclusion of unconfirmed outputs prevents the \nposthumous invalidation of own wallet transaction by the parent utxo sending party\n\nThe levels correspond with following target block confirmations amount:\n\nenum|confirmations\n--|--\nnone|0\ndefault|1\nsecure|6",
          "default": "default",
          "enum": [
            "none",
            "default",
            "secure"
          ]
        }
      ]
    },
    "/eth/erc20/{token}/{wallet}/transfer-from": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Ethereum transaction hash",
                  "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^0x[a-z0-9]{64}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "description": "Withdraw the preapproved amount of ERC20 tokens or less from a Ethereum address. The operation will fail if the withdrawn amount was not authorized by the address via the [approve](/api/ethereum-erc20/execute-eth-erc20-approve) operation.",
        "operationId": "execute-eth-erc20-transfer-from",
        "tags": [
          "ethereum-erc20"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "title": "Ethereum address",
                  "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
                  "minLength": 42,
                  "maxLength": 42,
                  "pattern": "^0x[a-f0-9]{40}$"
                },
                "amount": {
                  "type": "string",
                  "description": "ERC20 token amount to withdraw. Must not fall below the token's decimals specification (e.g. \"1e-18\" is the minimum amount for a 18 decimals token)",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$",
                  "example": "2.31"
                }
              },
              "required": [
                "from",
                "amount"
              ]
            }
          }
        ],
        "summary": "Execute ERC20 \"transferFrom\""
      },
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Ehereum ERC20 token contract address path parameter. Examples: `0xb5a5f22694352c15b00323844ad545abb2b11028`",
          "maxLength": 42,
          "minLength": 42,
          "pattern": "^0x[a-f0-9]{40}$"
        },
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/erc20/{token}/{wallet}/approve": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Ethereum transaction hash",
                  "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^0x[a-z0-9]{64}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Execute ERC20 \"approve\"",
        "description": "Approve an Ethereum address to withdraw ERC20 tokens from the wallet via the [transferFrom](/api/ethereum-erc20/execute-eth-erc20-transfer-from) operation",
        "operationId": "execute-eth-erc20-approve",
        "tags": [
          "ethereum-erc20"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "title": "Ethereum address",
                  "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
                  "minLength": 42,
                  "maxLength": 42,
                  "pattern": "^0x[a-f0-9]{40}$"
                },
                "amount": {
                  "type": "string",
                  "description": "ERC20 token withdrawal allowance. Must not fall below the token's decimals specification (e.g. \"1e-18\" is the minimum amount for a 18 decimals token)",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$",
                  "example": "2.31"
                }
              },
              "required": [
                "to",
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "to": "0xa2a079232ef7140e2b4700973c49f297a50b2ecd",
                "amount": "2.31"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Ehereum ERC20 token contract address path parameter. Examples: `0xb5a5f22694352c15b00323844ad545abb2b11028`",
          "maxLength": 42,
          "minLength": 42,
          "pattern": "^0x[a-f0-9]{40}$"
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/btc/wallet/{wallet}/estimate-fee": {
      "post": {
        "responses": {
          "200": {
            "description": "Server response for fee estimation for a Bitcoin transaction via `/btc/wallet/{wallet}/send`",
            "schema": {
              "type": "object",
              "properties": {
                "fee": {
                  "type": "string",
                  "description": "Effective fee estimation in BTC for given transaction",
                  "pattern": "\\d+\\.\\d+"
                },
                "feeRate": {
                  "type": "number",
                  "description": "Calculated feeRate for current transaction speed in Satoshi per byte",
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Estimate transaction fee",
        "description": "Returns the fee estimation for [`POST /btc/wallet/{wallet}/send`](https://tangany.docs.stoplight.io/api/bitcoin/make-btc-transaction) in accordance with the current `tangany-bitcoin-tx-speed` setting. The fee estimation is based on the current blockchain network utilization and can fluctuate in random fashion. Thus the estimation cannot guarantee to match the actual transaction fee. This call does not send an actual transaction to the Bitcoin network",
        "operationId": "estimate-btc-transaction",
        "tags": [
          "bitcoin"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Bitcoin transaction recipient",
                    "properties": {
                      "to": {
                        "type": "string",
                        "title": "Bitcoin address",
                        "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                        "minLength": 26,
                        "maxLength": 35,
                        "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount to send in Bitcoin",
                        "pattern": "^\\d*\\.?\\d*$"
                      }
                    },
                    "required": [
                      "to",
                      "amount"
                    ],
                    "description": "Single Bitcoin transaction recipient"
                  }
                },
                {
                  "type": "object",
                  "title": "Bitcoin transaction recipient",
                  "properties": {
                    "to": {
                      "type": "string",
                      "title": "Bitcoin address",
                      "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                      "minLength": 26,
                      "maxLength": 35,
                      "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
                    },
                    "amount": {
                      "type": "string",
                      "description": "Amount to send in Bitcoin",
                      "pattern": "^\\d*\\.?\\d*$"
                    }
                  },
                  "required": [
                    "to",
                    "amount"
                  ],
                  "description": "Single Bitcoin transaction recipient"
                }
              ]
            }
          }
        ],
        "security": [
          {
            "subscription": []
          },
          {
            "client": []
          },
          {
            "secret": []
          }
        ]
      },
      "parameters": [
        {
          "name": "tangany-bitcoin-network",
          "in": "header",
          "type": "string",
          "enum": [
            "bitcoin",
            "testnet"
          ],
          "description": "(Optional header) Defines the bitcoin network operate in. Supported networks: `bitcoin`, `testnet`.",
          "default": "bitcoin"
        },
        {
          "name": " tangany-bitcoin-tx-speed",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the target amount of block confirmations for the transaction to be included to the Bitcoin network. Faster inclusion requires a higher transaction fee. The fee is calculated in real time based on the network state and can be limited by the `header-bitcoin-max-fee-rate` option. The effective transaction delay can be calculated by multiplying the target confirmation blocks with the Bitcoin block time of 10 minutes (e.g. `slow` yields an block inclusion time of approx. 4h)\nDefaults to `default` when omitted from the call.\n\nThe speed levels correspond with following block times:\nSPEED|target block confirmations\n--|--\nslow|24\ndefault|6\nfast|2",
          "default": "default",
          "enum": [
            "slow",
            "default",
            "fast"
          ]
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        },
        {
          "in": "path",
          "type": "string",
          "name": "wallet",
          "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
          "required": true,
          "pattern": "^[0-9a-zA-Z-]{3,24}$",
          "maxLength": 24,
          "minLength": 3
        },
        {
          "name": "tangany-bitcoin-tx-confirmations",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines the minimum amount of block confirmations required for Bitcoin balance outputs (\"utxo\", \"coins\") to be included in the total wallet balance calculation. The exclusion of unconfirmed outputs prevents the \nposthumous invalidation of own wallet transaction by the parent utxo sending party\n\nThe levels correspond with following target block confirmations amount:\n\nenum|confirmations\n--|--\nnone|0\ndefault|1\nsecure|6",
          "default": "default",
          "enum": [
            "none",
            "default",
            "secure"
          ]
        }
      ]
    },
    "/eth/erc20/{token}/{wallet}/mint": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a successful Ethereum transaction status query",
            "schema": {
              "type": "object",
              "properties": {
                "isError": {
                  "type": "boolean",
                  "description": "`true` when Ethereum declines to mine the transaction. This can happen when the transaction is fueled with insufficient amount of gas or some other error occurs during contract execution. `false` means the transaction executed successfully",
                  "example": false
                },
                "blockNr": {
                  "title": "Ethereum block",
                  "description": "Block number for a given Ethereum transaction. Equals null when the given transaction hash was not yet included in any block to be mined by the Ethereum Virtual Machine. Examples: `7238290`",
                  "type": [
                    "number",
                    "null"
                  ],
                  "example": 45093
                }
              },
              "required": [
                "isError",
                "blockNr"
              ]
            },
            "examples": {
              "application/json": {
                "isError": false,
                "blockNr": 7238290
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "operationId": "execute-eth-erc20-mint",
        "tags": [
          "ethereum-erc20"
        ],
        "description": "Executes the ERC20 method \"mint\" on compatible contracts to generate an amount of tokens to the current wallet",
        "summary": "Execute ERC20 \"mint\"",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "description": "ERC20 token amount to generate",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$",
                  "example": "2.31"
                }
              },
              "required": [
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "amount": "2.31"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "wallet",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    },
    "/eth/erc20/{token}/{wallet}/burn": {
      "post": {
        "responses": {
          "202": {
            "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
            "schema": {
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string",
                  "title": "Ethereum transaction hash",
                  "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
                  "minLength": 64,
                  "maxLength": 64,
                  "pattern": "^0x[a-z0-9]{64}$"
                }
              }
            },
            "examples": {
              "application/json": {
                "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
              }
            }
          },
          "400": {
            "description": "Generic server response for failed requests",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 401,
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id "
              }
            }
          },
          "401": {
            "description": "Server response for invalid authentication",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "missing authentication header tangany-client-id",
                "statusCode": 401
              }
            }
          },
          "404": {
            "description": "Server response for non-existent resource",
            "schema": {
              "type": "object",
              "title": "General error",
              "description": "Generic server response for failed requests",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "Service tracing ID to debug the error call",
                  "format": "uuid",
                  "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "missing authentication header tangany-client-id"
                },
                "statusCode": {
                  "type": "number",
                  "description": "Http status code ",
                  "minimum": 100,
                  "maximum": 599,
                  "example": 401
                }
              },
              "required": [
                "activityId",
                "message",
                "statusCode"
              ]
            },
            "examples": {
              "application/json": {
                "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
                "message": "no wallet found for given name",
                "statusCode": 404
              }
            }
          }
        },
        "summary": "Execute ERC20 \"burn\"",
        "description": "Executes the ERC20 method \"burn\" on compatible contracts to destroy an amount of tokens from the current wallet",
        "operationId": "execute-eth-erc20-burn",
        "tags": [
          "ethereum-erc20"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "description": "ERC20 token amount to destroy",
                  "minLength": 1,
                  "pattern": "^\\d*\\.?\\d*$",
                  "example": "2.31"
                }
              },
              "required": [
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "amount": "2.31"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "wallet",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "tangany-ethereum-network",
          "in": "header",
          "type": "string",
          "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
          "enum": [
            "mainnet",
            "ropsten"
          ],
          "default": "mainnet"
        },
        {
          "name": "tangany-ethereum-tx-speed",
          "in": "header",
          "type": "string",
          "default": "default",
          "enum": [
            "none",
            "slow",
            "default",
            "fast"
          ],
          "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
        },
        {
          "name": "tangany-vault-url",
          "in": "header",
          "type": "string",
          "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
        }
      ]
    }
  },
  "securityDefinitions": {
    "subscription": {
      "type": "apiKey",
      "in": "header",
      "name": "tangany-subscription",
      "description": "Product subscription key. Example `0284a2ce98a021028b7`"
    },
    "client": {
      "type": "apiKey",
      "name": "tangany-client-id",
      "in": "header",
      "description": "Service to service authentication client ID. Example `ae13e-020-1a33-0bbe-c5a9-a2f9437523be`"
    },
    "secret": {
      "type": "apiKey",
      "name": "tangany-client-secret",
      "in": "header",
      "description": "Service to service authentication client secret. Example `P*WZ9_gIr(Fp\"ZT2`"
    }
  },
  "definitions": {
    "ethereum-address": {
      "type": "string",
      "title": "Ethereum address",
      "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
      "minLength": 42,
      "maxLength": 42,
      "pattern": "^0x[a-f0-9]{40}$"
    },
    "ethereum-hash": {
      "type": "string",
      "title": "Ethereum transaction hash",
      "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
      "minLength": 64,
      "maxLength": 64,
      "pattern": "^0x[a-z0-9]{64}$"
    },
    "ethereum-public-network": {
      "type": "string",
      "title": "Ethereum public network",
      "description": "Public ethereum network to operate in. Examples: `mainnet`, `ropsten`",
      "enum": [
        "mainnet",
        "ropsten"
      ]
    },
    "ethereum-private-network": {
      "type": "string",
      "title": "Ethereum private network",
      "format": "uri",
      "description": "Custom RPC URL for a private ethereum network to operate in. Examples: `http://somenetwork.example.org:8540`"
    },
    "ethereum-block": {
      "title": "Ethereum block",
      "description": "Block number for a given Ethereum transaction. Equals null when the given transaction hash was not yet included in any block to be mined by the Ethereum Virtual Machine. Examples: `7238290`",
      "type": [
        "number",
        "null"
      ],
      "example": 45093
    },
    "ethereum-wallet-balance": {
      "type": "string",
      "title": "Ethereum wallet balance",
      "description": "Amount of ether that a wallet address holds. Examples: `2.3411` `0.0001803`",
      "minLength": 1,
      "pattern": "^\\d*\\.?\\d*$"
    },
    "ethereum-erc20-token-balance": {
      "type": "string",
      "title": "Ethereum ERC20 token balance",
      "description": "ERC20 token amount to transfer. Must not fall below the token's decimals specification Examples: `1200`, `1e-18` (min. possible amount for a 18 decimals token)",
      "minLength": 1,
      "pattern": "^\\d*\\.?\\d*$"
    },
    "ethereum-erc20-token-symbol": {
      "type": "string",
      "title": "Ethereum ERC20 token symbol",
      "example": "BAT, ICX",
      "description": "Ethereum ERC20 token symbol. Examples: `BAT`"
    },
    "wallet": {
      "type": "object",
      "title": "Wallet",
      "description": "A wallet account that represents a single blockchain account.",
      "properties": {
        "wallet": {
          "type": "string",
          "title": "Wallet name",
          "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[0-9a-zA-Z-]{1,127}$"
        },
        "version": {
          "type": "string",
          "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
          "minLength": 32,
          "maxLength": 32,
          "pattern": "^(latest|[0-9a-z]{32})$"
        },
        "created": {
          "type": "string",
          "description": "Creation time in UTC",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "Last updated time in UTC",
          "format": "date-time"
        },
        "security": {
          "type": "string",
          "enum": [
            "software",
            "hsm"
          ],
          "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
          "example": "hsm"
        }
      },
      "required": [
        "wallet",
        "version",
        "created",
        "updated",
        "security"
      ]
    },
    "wallet-name": {
      "type": "string",
      "title": "Wallet name",
      "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
      "minLength": 1,
      "maxLength": 127,
      "pattern": "^[0-9a-zA-Z-]{1,127}$"
    },
    "use-hsm": {
      "type": "boolean",
      "title": "HSM usage",
      "description": "Enhance wallet security via Hardware Secure Module usage for cryptographic operations. Only supported by certain subscritions.",
      "example": true
    },
    "error": {
      "type": "object",
      "title": "General error",
      "description": "Generic server response for failed requests",
      "properties": {
        "activityId": {
          "type": "string",
          "description": "Service tracing ID to debug the error call",
          "format": "uuid",
          "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
        },
        "message": {
          "type": "string",
          "description": "Error description",
          "example": "missing authentication header tangany-client-id"
        },
        "statusCode": {
          "type": "number",
          "description": "Http status code ",
          "minimum": 100,
          "maximum": 599,
          "example": 401
        }
      },
      "required": [
        "activityId",
        "message",
        "statusCode"
      ]
    },
    "skiptoken": {
      "type": "string",
      "title": "Skiptoken",
      "description": "Paging parameter returned by the endpoint to query the next batch of results when used as a query parameter in the call",
      "pattern": "[a-zA-Z0-9]+"
    },
    "bitcoin-address": {
      "type": "string",
      "title": "Bitcoin address",
      "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
      "minLength": 26,
      "maxLength": 35,
      "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
    },
    "bitcoin-wallet-balance": {
      "type": "string",
      "title": "Bitcoin wallet balance",
      "description": "Amount of btc the wallet holds. Examples: `1.0417`",
      "minLength": 1,
      "pattern": "^\\d*\\.?\\d*$"
    },
    "bitcoin-transaction-hash": {
      "type": "string",
      "title": "Bitcoin transaction hash",
      "description": "Hexadecimal hash that represents a bitcoin transaction",
      "minLength": 64,
      "maxLength": 64,
      "pattern": "^[a-fA-F0-9]{64}$",
      "example": "f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887"
    },
    "bitcoin-network": {
      "type": "string",
      "title": "Bitcoin network",
      "description": "Bitcoin network to operate in. Examples: `bitcoin`, `testnet`",
      "enum": [
        "bitcoin",
        "testnet"
      ],
      "example": "bitcoin"
    },
    "bitcoin-transaction-recipient": {
      "type": "object",
      "title": "Bitcoin transaction recipient",
      "properties": {
        "to": {
          "type": "string",
          "title": "Bitcoin address",
          "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
          "minLength": 26,
          "maxLength": 35,
          "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
        },
        "amount": {
          "type": "string",
          "description": "Amount to send in Bitcoin",
          "pattern": "^\\d*\\.?\\d*$"
        }
      },
      "required": [
        "to",
        "amount"
      ],
      "description": "Single Bitcoin transaction recipient"
    },
    "bitcoin-transaction-multiple-recipients": {
      "type": "object",
      "title": "Bitcoin transaction multiple recipients",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Bitcoin transaction recipient",
            "properties": {
              "to": {
                "type": "string",
                "title": "Bitcoin address",
                "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
                "minLength": 26,
                "maxLength": 35,
                "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
              },
              "amount": {
                "type": "string",
                "description": "Amount to send in Bitcoin",
                "pattern": "^\\d*\\.?\\d*$"
              }
            },
            "required": [
              "to",
              "amount"
            ],
            "description": "Single Bitcoin transaction recipient"
          }
        }
      },
      "required": [
        "list"
      ],
      "description": "List of Bitcoin transaction recipients for sending Bitcoin to multiple targets in a single transaction"
    }
  },
  "responses": {
    "ethereum-wallet": {
      "description": "Server response for a successful Ethereum wallet query",
      "schema": {
        "type": "object",
        "title": "Ethereum Wallet",
        "properties": {
          "balance": {
            "type": "string",
            "title": "Ethereum wallet balance",
            "description": "Amount of ether that a wallet address holds. Examples: `2.3411` `0.0001803`",
            "minLength": 1,
            "pattern": "^\\d*\\.?\\d*$"
          },
          "address": {
            "type": "string",
            "title": "Ethereum address",
            "description": "A hexadecimal Ethereum address. Examples: `0xde0a21566919d193e6a28a9ac8534144cb697eee`",
            "minLength": 42,
            "maxLength": 42,
            "pattern": "^0x[a-f0-9]{40}$"
          },
          "currency": {
            "type": "string",
            "enum": [
              "ETHER"
            ],
            "pattern": "ETHER",
            "description": "Blockchain currency - Ether for Ethereum based blockchains",
            "example": "ETHER"
          }
        },
        "required": [
          "balance",
          "address",
          "currency"
        ]
      },
      "examples": {
        "application/json": {
          "balance": "3.4361104",
          "currency": "ETHER",
          "address": "0x21877824166e5886129313738289ae19c6bea240"
        }
      }
    },
    "ethereum-erc20": {
      "description": "Server response for a successful ERC20 token query",
      "schema": {
        "type": "object",
        "title": "Ethereum Erc20 token balance",
        "properties": {
          "balance": {
            "type": "string",
            "title": "Ethereum ERC20 token balance",
            "description": "ERC20 token amount to transfer. Must not fall below the token's decimals specification Examples: `1200`, `1e-18` (min. possible amount for a 18 decimals token)",
            "minLength": 1,
            "pattern": "^\\d*\\.?\\d*$"
          },
          "currency": {
            "type": "string",
            "description": "ERC20 token symbol",
            "example": "CAT"
          }
        },
        "required": [
          "balance",
          "currency"
        ]
      },
      "examples": {
        "application/json": {
          "balance": "14235.76",
          "currency": "CAT"
        }
      }
    },
    "ethereum-transaction-hash": {
      "description": "Server response for a Ethereum transaction that was queued to be mined by the Ethereum network. Call `/eth/transaction/{hash}` to retrieve the mining status for the transaction",
      "schema": {
        "type": "object",
        "required": [
          "hash"
        ],
        "properties": {
          "hash": {
            "type": "string",
            "title": "Ethereum transaction hash",
            "description": "Ethereum transaction hash that represents a blockchain operation. Examples: `0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060`",
            "minLength": 64,
            "maxLength": 64,
            "pattern": "^0x[a-z0-9]{64}$"
          }
        }
      },
      "examples": {
        "application/json": {
          "hash": "0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c"
        }
      }
    },
    "ethereum-transaction-status": {
      "description": "Server response for a successful Ethereum transaction status query",
      "schema": {
        "type": "object",
        "properties": {
          "isError": {
            "type": "boolean",
            "description": "`true` when Ethereum declines to mine the transaction. This can happen when the transaction is fueled with insufficient amount of gas or some other error occurs during contract execution. `false` means the transaction executed successfully",
            "example": false
          },
          "blockNr": {
            "title": "Ethereum block",
            "description": "Block number for a given Ethereum transaction. Equals null when the given transaction hash was not yet included in any block to be mined by the Ethereum Virtual Machine. Examples: `7238290`",
            "type": [
              "number",
              "null"
            ],
            "example": 45093
          }
        },
        "required": [
          "isError",
          "blockNr"
        ]
      },
      "examples": {
        "application/json": {
          "isError": false,
          "blockNr": 7238290
        }
      }
    },
    "wallet-status": {
      "description": "Server response for a successfuly created or recreated wallet",
      "schema": {
        "type": "object",
        "title": "Wallet",
        "description": "A wallet account that represents a single blockchain account.",
        "properties": {
          "wallet": {
            "type": "string",
            "title": "Wallet name",
            "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
            "minLength": 1,
            "maxLength": 127,
            "pattern": "^[0-9a-zA-Z-]{1,127}$"
          },
          "version": {
            "type": "string",
            "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
            "minLength": 32,
            "maxLength": 32,
            "pattern": "^(latest|[0-9a-z]{32})$"
          },
          "created": {
            "type": "string",
            "description": "Creation time in UTC",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Last updated time in UTC",
            "format": "date-time"
          },
          "security": {
            "type": "string",
            "enum": [
              "software",
              "hsm"
            ],
            "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
            "example": "hsm"
          }
        },
        "required": [
          "wallet",
          "version",
          "created",
          "updated",
          "security"
        ]
      },
      "examples": {
        "application/json": {
          "wallet": "ae5de2d7-6314-463e-a470-0a47812fcbec",
          "version": "e48c26c458c64c669cca3f6e46142698",
          "created": "2019-03-12T11:25:32Z",
          "updated": "2019-03-12T11:25:32Z",
          "security": "hsm"
        }
      }
    },
    "wallet-status-soft-delete": {
      "description": "Server response for a successful soft-deletion request for a wallet",
      "schema": {
        "type": "object",
        "properties": {
          "recoveryId": {
            "type": "string",
            "title": "Wallet name",
            "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
            "minLength": 1,
            "maxLength": 127,
            "pattern": "^[0-9a-zA-Z-]{1,127}$"
          },
          "scheduledPurgeDate": {
            "type": "string",
            "format": "date",
            "description": "Soft deleted wallets are purged by the system after a 90 days retention period. After that a recovery of the deleted key is impossible."
          }
        },
        "required": [
          "recoveryId",
          "scheduledPurgeDate"
        ]
      },
      "examples": {
        "application/json": {
          "recoveryId": "ae5de2d7-6314-463e-a470-0a47812fcbec",
          "scheduledPurgeDate": "2019-03-12T11:25:32Z"
        }
      }
    },
    "error-general": {
      "description": "Generic server response for failed requests",
      "schema": {
        "type": "object",
        "title": "General error",
        "description": "Generic server response for failed requests",
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Service tracing ID to debug the error call",
            "format": "uuid",
            "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "missing authentication header tangany-client-id"
          },
          "statusCode": {
            "type": "number",
            "description": "Http status code ",
            "minimum": 100,
            "maximum": 599,
            "example": 401
          }
        },
        "required": [
          "activityId",
          "message",
          "statusCode"
        ]
      },
      "examples": {
        "application/json": {
          "statusCode": 401,
          "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
          "message": "missing authentication header tangany-client-id "
        }
      }
    },
    "wallet-status-list": {
      "description": "Server response for a successful wallet list query",
      "schema": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Wallet",
              "description": "A wallet account that represents a single blockchain account.",
              "properties": {
                "wallet": {
                  "type": "string",
                  "title": "Wallet name",
                  "description": "The name and a primary identifier of a wallet that cannot be changed after creation. Defaults to a random GUID when omitted as parameter. Examples: `u1938484`, `ae5de2d7-6314-463e-a470-0a47812fcbec`\n",
                  "minLength": 1,
                  "maxLength": 127,
                  "pattern": "^[0-9a-zA-Z-]{1,127}$"
                },
                "version": {
                  "type": "string",
                  "description": "The version number of a wallet. The version is computed on wallet creation and only changes when a wallet is reset or overwritten.",
                  "minLength": 32,
                  "maxLength": 32,
                  "pattern": "^(latest|[0-9a-z]{32})$"
                },
                "created": {
                  "type": "string",
                  "description": "Creation time in UTC",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "Last updated time in UTC",
                  "format": "date-time"
                },
                "security": {
                  "type": "string",
                  "enum": [
                    "software",
                    "hsm"
                  ],
                  "description": "Configured wallet security level. Value `hsm` corresponds to FIPS 140-2 security standard",
                  "example": "hsm"
                }
              },
              "required": [
                "wallet",
                "version",
                "created",
                "updated",
                "security"
              ]
            }
          },
          "skiptoken": {
            "type": "string",
            "title": "Skiptoken",
            "description": "Paging parameter returned by the endpoint to query the next batch of results when used as a query parameter in the call",
            "pattern": "[a-zA-Z0-9]+"
          }
        },
        "required": [
          "list"
        ]
      },
      "examples": {
        "application/json": {
          "list": [
            {
              "wallet": "dummy-wallet-d429af11af0d3f9acba61e7ef1f92aa1e2306502",
              "version": "latest",
              "created": "2019-03-26T13:08:51Z",
              "updated": "2019-03-26T13:08:51Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-d95a9966f6666fd1437980506643fce1a59cfec9",
              "version": "latest",
              "created": "2019-03-22T21:04:03Z",
              "updated": "2019-03-22T21:04:03Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-e4bddb240c27ab88f8eabe9d46872f29fc7b985e",
              "version": "latest",
              "created": "2019-03-22T21:04:53Z",
              "updated": "2019-03-22T21:04:53Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-e89eee7ddf6554e21e3f3251a5d719dd1a644f1a",
              "version": "latest",
              "created": "2019-03-26T14:11:33Z",
              "updated": "2019-03-26T14:11:33Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-eb73740a53230464c28c6158e82bf159a3bb24ae",
              "version": "latest",
              "created": "2019-03-22T23:50:47Z",
              "updated": "2019-03-22T23:50:47Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-f8a6f2b4eb4e839340112050eab8c2a511e15ab4",
              "version": "latest",
              "created": "2019-03-22T21:03:13Z",
              "updated": "2019-03-22T21:03:13Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-fafefe3fde3d5cc5a5a36eb0ed88320b6c357bfc",
              "version": "latest",
              "created": "2019-03-22T16:11:30Z",
              "updated": "2019-03-22T16:11:30Z",
              "security": "software"
            },
            {
              "wallet": "dummy-wallet-ff5a65dd43306b8e181292cf2baed429cb76342f",
              "version": "latest",
              "created": "2019-03-22T21:04:29Z",
              "updated": "2019-03-22T21:04:29Z",
              "security": "software"
            },
            {
              "wallet": "dummy001116",
              "version": "latest",
              "created": "2019-03-25T19:11:57Z",
              "updated": "2019-03-25T19:11:57Z",
              "security": "software"
            },
            {
              "wallet": "dummy001147",
              "version": "latest",
              "created": "2019-03-25T19:11:43Z",
              "updated": "2019-03-25T19:11:43Z",
              "security": "software"
            },
            {
              "wallet": "dummy001195",
              "version": "latest",
              "created": "2019-03-25T19:11:39Z",
              "updated": "2019-03-25T19:11:39Z",
              "security": "software"
            },
            {
              "wallet": "dummy001213",
              "version": "latest",
              "created": "2019-03-25T19:11:30Z",
              "updated": "2019-03-25T19:11:30Z",
              "security": "software"
            },
            {
              "wallet": "dummy001243",
              "version": "latest",
              "created": "2019-03-25T19:11:45Z",
              "updated": "2019-03-25T19:11:45Z",
              "security": "software"
            },
            {
              "wallet": "dummy001352",
              "version": "latest",
              "created": "2019-03-25T19:11:59Z",
              "updated": "2019-03-25T19:11:59Z",
              "security": "software"
            },
            {
              "wallet": "dummy0115",
              "version": "latest",
              "created": "2019-03-25T19:11:54Z",
              "updated": "2019-03-25T19:11:54Z",
              "security": "software"
            },
            {
              "wallet": "dummy011583",
              "version": "latest",
              "created": "2019-03-25T19:11:49Z",
              "updated": "2019-03-25T19:11:49Z",
              "security": "software"
            },
            {
              "wallet": "dummy001671",
              "version": "latest",
              "created": "2019-03-25T19:12:02Z",
              "updated": "2019-03-25T19:12:02Z",
              "security": "software"
            },
            {
              "wallet": "dummy101699",
              "version": "latest",
              "created": "2019-03-25T19:11:51Z",
              "updated": "2019-03-25T19:11:51Z",
              "security": "software"
            },
            {
              "wallet": "dummy00198",
              "version": "latest",
              "created": "2019-03-25T19:11:41Z",
              "updated": "2019-03-25T19:11:41Z",
              "security": "software"
            },
            {
              "wallet": "e136ab43b3d241a8612dd8dbfcfdc354971487b0",
              "version": "latest",
              "created": "2019-03-20T20:14:25Z",
              "updated": "2019-03-20T20:14:25Z",
              "security": "software"
            },
            {
              "wallet": "e139ccc8b23a6c5581954a7bbecb3b0e188fcb41",
              "version": "latest",
              "created": "2019-03-22T23:53:36Z",
              "updated": "2019-03-22T23:53:36Z",
              "security": "software"
            },
            {
              "wallet": "e17e3098f68079ab4557faa601aa17513fdf0b98",
              "version": "latest",
              "created": "2019-03-21T07:23:40Z",
              "updated": "2019-03-21T07:23:40Z",
              "security": "software"
            },
            {
              "wallet": "e2e47f79a2dd9547196cfa9e478128b854aa5d2d",
              "version": "latest",
              "created": "2019-03-21T07:41:31Z",
              "updated": "2019-03-21T07:41:31Z",
              "security": "software"
            }
          ],
          "skiptoken": "eyJOZXh0TaFya2VyIjoiMiExMTIhTURbd01EUXdJV3RsZVM5Rk5UQkVSVVp10XkxRlJFSXdMVFEyUVVFdE9USkRPQzB5Tm12tJM1JqazJRa1Uzt1RZaeR1EQXdNREk0SVRrNU9Ua3RmNcv2FTXpGVU1qTTZOVGs2TlRrdU9UazVPVGs1T1ZvaCIsIlRhcmdldExvY2F0aW9uIj01wfQ"
        }
      }
    },
    "bitcoin-wallet": {
      "description": "Server response for a successful Bitcoin wallet query",
      "schema": {
        "type": "object",
        "required": [
          "currency",
          "balance",
          "address"
        ],
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "BITCOIN"
            ],
            "description": "Blockchain currency - Bitcoin",
            "example": "BITCOIN"
          },
          "balance": {
            "type": "string",
            "title": "Bitcoin wallet balance",
            "description": "Amount of btc the wallet holds. Examples: `1.0417`",
            "minLength": 1,
            "pattern": "^\\d*\\.?\\d*$"
          },
          "address": {
            "type": "string",
            "title": "Bitcoin address",
            "description": "Valid Bitcoin address for the current [network](/api/models/bitcoin-network). Examples: `1PaQgYRWgnW1UCwQWDoi6LKZGPYQmCDPsp`, `bc1qxz8xr5sdg3zfdcyyy8snacwxj2q0pm6hayuf8v`",
            "minLength": 26,
            "maxLength": 35,
            "pattern": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$"
          }
        }
      },
      "examples": {
        "application/json": {
          "currency": "BITCOIN",
          "balance": "1.25634",
          "address": "bc1qhxkx7t7wr78mvw55hcc5fnaa2xztwjg7a9aqjz"
        }
      }
    },
    "bitcoin-transaction-hash": {
      "description": "Server response for a Bitcoin transaction that was queued to be mined by the Bitcoin network. Call `/btc/transaction/{hash}` to retrieve the status for the transaction",
      "schema": {
        "type": "object",
        "required": [
          "hash"
        ],
        "properties": {
          "hash": {
            "type": "string",
            "title": "Bitcoin transaction hash",
            "description": "Hexadecimal hash that represents a bitcoin transaction",
            "minLength": 64,
            "maxLength": 64,
            "pattern": "^[a-fA-F0-9]{64}$",
            "example": "f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887"
          }
        }
      },
      "examples": {
        "application/json": {
          "hash": "f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887"
        }
      }
    },
    "error-auth": {
      "description": "Server response for invalid authentication",
      "schema": {
        "type": "object",
        "title": "General error",
        "description": "Generic server response for failed requests",
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Service tracing ID to debug the error call",
            "format": "uuid",
            "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "missing authentication header tangany-client-id"
          },
          "statusCode": {
            "type": "number",
            "description": "Http status code ",
            "minimum": 100,
            "maximum": 599,
            "example": 401
          }
        },
        "required": [
          "activityId",
          "message",
          "statusCode"
        ]
      },
      "examples": {
        "application/json": {
          "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
          "message": "missing authentication header tangany-client-id",
          "statusCode": 401
        }
      }
    },
    "error-not-found": {
      "description": "Server response for non-existent resource",
      "schema": {
        "type": "object",
        "title": "General error",
        "description": "Generic server response for failed requests",
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Service tracing ID to debug the error call",
            "format": "uuid",
            "example": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236"
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "missing authentication header tangany-client-id"
          },
          "statusCode": {
            "type": "number",
            "description": "Http status code ",
            "minimum": 100,
            "maximum": 599,
            "example": 401
          }
        },
        "required": [
          "activityId",
          "message",
          "statusCode"
        ]
      },
      "examples": {
        "application/json": {
          "activityId": "03a471c7-62d9-4d6c-9bdd-888f6f2e2236",
          "message": "no wallet found for given name",
          "statusCode": 404
        }
      }
    },
    "bitcoin-transaction-status": {
      "description": "Returns the transaction status for a bitcoin transaction",
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the bitcoin transaction",
            "enum": [
              "pending",
              "confirmed",
              "error"
            ],
            "example": "pending"
          },
          "confirmations": {
            "type": "number",
            "description": "Amount of confirmations blocks that were mined on top of the block the transaction was included to",
            "example": 2
          }
        },
        "required": [
          "status",
          "confirmations"
        ]
      },
      "examples": {
        "application/json": {
          "status": "pending",
          "confirmations": 2
        }
      }
    },
    "bitcoin-transaction-fee-estimation": {
      "description": "Server response for fee estimation for a Bitcoin transaction via `/btc/wallet/{wallet}/send`",
      "schema": {
        "type": "object",
        "properties": {
          "fee": {
            "type": "string",
            "description": "Effective fee estimation in BTC for given transaction",
            "pattern": "\\d+\\.\\d+"
          },
          "feeRate": {
            "type": "number",
            "description": "Calculated feeRate for current transaction speed in Satoshi per byte",
            "minimum": 0
          }
        }
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/v1",
  "tags": [
    {
      "name": "wallet",
      "description": "Calls for managing wallets"
    },
    {
      "name": "ethereum",
      "description": "Ethereum based calls"
    },
    {
      "name": "ethereum-erc20",
      "description": "Ethereum ERC20 based calls"
    },
    {
      "name": "bitcoin"
    }
  ],
  "parameters": {
    "path-wallet": {
      "in": "path",
      "type": "string",
      "name": "wallet",
      "description": "Wallet name path parameter. Examples: `ae5de2d7-6314-463e-a470-0a47812fcbec`",
      "required": true,
      "pattern": "^[0-9a-zA-Z-]{3,24}$",
      "maxLength": 24,
      "minLength": 3
    },
    "path-ethereum-hash": {
      "name": "hash",
      "in": "path",
      "type": "string",
      "description": "Ethereum transaction hash path parameter. Examples: `0x8c9e3ce99b9e80cb87ef95be285537f5e41d229561ee9bcac45d8c5f256f7b2c`",
      "required": true,
      "maxLength": 64,
      "minLength": 64,
      "pattern": "^[a-z0-9]{64}$"
    },
    "path-ethereum-erc20-address": {
      "name": "token",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "Ehereum ERC20 token contract address path parameter. Examples: `0xb5a5f22694352c15b00323844ad545abb2b11028`",
      "maxLength": 42,
      "minLength": 42,
      "pattern": "^0x[a-f0-9]{40}$"
    },
    "header-ethereum-network": {
      "name": "tangany-ethereum-network",
      "in": "header",
      "type": "string",
      "description": "(Optional header) Defines a public network or an ethereum rpc endpoint to operate in. Supported public networks: `mainnet`, `ropsten`. Examples for private Ethereum RPC: `https://somenetwork.example.org:8540`",
      "enum": [
        "mainnet",
        "ropsten"
      ],
      "default": "mainnet"
    },
    "header-ethereum-tx-speed": {
      "name": "tangany-ethereum-tx-speed",
      "in": "header",
      "type": "string",
      "default": "default",
      "enum": [
        "none",
        "slow",
        "default",
        "fast"
      ],
      "description": "(Optional header) Defines the amount of additional gas fee that is added to the base gas fee for the given ethereum network to speed up the mining process of the transaction. The usage of `none` value may result in the transaction never gets mined and is only intended to use for custom ethereum networks that employ zero gas price policies. Defaults to `default` when omitted from the call.\n\nThe speed levels correspond with following Ethereum fees:\nSPEED|Gwei\n--|--\nnone|0\nslow|2\ndefault|5\nfast|15"
    },
    "query-skiptoken": {
      "name": "skiptoken",
      "in": "query",
      "type": "string",
      "pattern": "[a-zA-Z0-9]+",
      "description": "Query the next page of the results batch"
    },
    "header-bitcoin-tx-confirmations": {
      "name": "tangany-bitcoin-tx-confirmations",
      "in": "header",
      "type": "string",
      "description": "(Optional header) Defines the minimum amount of block confirmations required for Bitcoin balance outputs (\"utxo\", \"coins\") to be included in the total wallet balance calculation. The exclusion of unconfirmed outputs prevents the \nposthumous invalidation of own wallet transaction by the parent utxo sending party\n\nThe levels correspond with following target block confirmations amount:\n\nenum|confirmations\n--|--\nnone|0\ndefault|1\nsecure|6",
      "default": "default",
      "enum": [
        "none",
        "default",
        "secure"
      ]
    },
    "header-bitcoin-network": {
      "name": "tangany-bitcoin-network",
      "in": "header",
      "type": "string",
      "enum": [
        "bitcoin",
        "testnet"
      ],
      "description": "(Optional header) Defines the bitcoin network operate in. Supported networks: `bitcoin`, `testnet`.",
      "default": "bitcoin"
    },
    "path-bitcoin-hash": {
      "name": "hash",
      "in": "path",
      "type": "string",
      "description": "Bitcoin transaction hash. Example `f373e184b4954c5b9ce9dfc2a615a3013cc7f47cc37114b2999ff41756fc6887`",
      "maxLength": 64,
      "minLength": 64,
      "pattern": "^[a-f0-9]{64}$",
      "required": true
    },
    "header-vault-url": {
      "name": "tangany-vault-url",
      "in": "header",
      "type": "string",
      "description": "Wallet storage vault url. Example `https://my.vault.some-url.net`"
    },
    " header-bitcoin-tx-speed": {
      "name": " tangany-bitcoin-tx-speed",
      "in": "header",
      "type": "string",
      "description": "(Optional header) Defines the target amount of block confirmations for the transaction to be included to the Bitcoin network. Faster inclusion requires a higher transaction fee. The fee is calculated in real time based on the network state and can be limited by the `header-bitcoin-max-fee-rate` option. The effective transaction delay can be calculated by multiplying the target confirmation blocks with the Bitcoin block time of 10 minutes (e.g. `slow` yields an block inclusion time of approx. 4h)\nDefaults to `default` when omitted from the call.\n\nThe speed levels correspond with following block times:\nSPEED|target block confirmations\n--|--\nslow|24\ndefault|6\nfast|2",
      "default": "default",
      "enum": [
        "slow",
        "default",
        "fast"
      ]
    },
    "header-bitcoin-max-fee-rate": {
      "name": "tangany-bitcoin-max-fee-rate",
      "in": "header",
      "type": "string",
      "default": "500",
      "description": "(Optional header) Defines the maximum allowed fee rate (satoshi per byte) for a Bitcoin transaction. Prevents from speding absurdly high transaction fees during block fee peaks",
      "pattern": "\\d+"
    }
  },
  "security": [
    {
      "subscription": []
    },
    {
      "client": []
    },
    {
      "secret": []
    }
  ],
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true
    }
  }
}